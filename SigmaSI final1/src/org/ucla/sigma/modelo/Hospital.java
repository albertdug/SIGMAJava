package org.ucla.sigma.modelo;

// Generated 03/06/2012 11:28:14 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterJoinTable;

/**
 * Hospital generated by hbm2java
 */
@Entity
@Table(name = "hospital", schema = "public")
@FilterDef(name = "activo")
public class Hospital implements java.io.Serializable {

	private int id;
	private Imagen imagen;
	private Ciudad ciudad;
	private String nombre;
	private String descripcion;
	private String direccion;
	private String telefonoA;
	private String telefonoB;
	private String correoA;
	private String correoB;
	private String faxA;
	private String faxB;
	private String twitter;
	private String rif;
	private String nit;
	private String mision;
	private String vision;
	private String objetivo;
	private String slogan;
	private String horario;
	private char estatus = 'A';
	private Set<HospitalDifusion> hospitalDifusions = new HashSet<HospitalDifusion>(
			0);
	private Set<Area> areas = new HashSet<Area>(0);

	public Hospital() {
	}

	public Hospital(int id, Imagen imagen, Ciudad ciudad, String nombre,
			String descripcion, String direccion, String telefonoA,
			String correoA, String mision, String vision, String objetivo,
			String slogan, String horario, char estatus) {
		this.id = id;
		this.imagen = imagen;
		this.ciudad = ciudad;
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.direccion = direccion;
		this.telefonoA = telefonoA;
		this.correoA = correoA;
		this.mision = mision;
		this.vision = vision;
		this.objetivo = objetivo;
		this.slogan = slogan;
		this.horario = horario;
		this.estatus = estatus;
	}

	public Hospital(int id, Imagen imagen, Ciudad ciudad, String nombre,
			String descripcion, String direccion, String telefonoA,
			String telefonoB, String correoA, String correoB, String faxA,
			String faxB, String twitter, String rif, String nit, String mision,
			String vision, String objetivo, String slogan, String horario,
			char estatus, Set<HospitalDifusion> hospitalDifusions,
			Set<Area> areas) {
		this.id = id;
		this.imagen = imagen;
		this.ciudad = ciudad;
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.direccion = direccion;
		this.telefonoA = telefonoA;
		this.telefonoB = telefonoB;
		this.correoA = correoA;
		this.correoB = correoB;
		this.faxA = faxA;
		this.faxB = faxB;
		this.twitter = twitter;
		this.rif = rif;
		this.nit = nit;
		this.mision = mision;
		this.vision = vision;
		this.objetivo = objetivo;
		this.slogan = slogan;
		this.horario = horario;
		this.estatus = estatus;
		this.hospitalDifusions = hospitalDifusions;
		this.areas = areas;
	}

	@Id
	@SequenceGenerator(name = "SEQ_HOSPITAL", sequenceName = "seq_hospital", allocationSize = 1, schema = "public")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SEQ_HOSPITAL")
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "imagenid")
	public Imagen getImagen() {
		return this.imagen;
	}

	public void setImagen(Imagen imagen) {
		this.imagen = imagen;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ciudadid", nullable = false)
	public Ciudad getCiudad() {
		return this.ciudad;
	}

	public void setCiudad(Ciudad ciudad) {
		this.ciudad = ciudad;
	}

	@Column(name = "nombre", nullable = false)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "descripcion", nullable = false)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "direccion", nullable = false)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "telefono_a", nullable = false, length = 12)
	public String getTelefonoA() {
		return this.telefonoA;
	}

	public void setTelefonoA(String telefonoA) {
		this.telefonoA = telefonoA;
	}

	@Column(name = "telefono_b", length = 12)
	public String getTelefonoB() {
		return this.telefonoB;
	}

	public void setTelefonoB(String telefonoB) {
		this.telefonoB = telefonoB;
	}

	@Column(name = "correo_a", nullable = false)
	public String getCorreoA() {
		return this.correoA;
	}

	public void setCorreoA(String correoA) {
		this.correoA = correoA;
	}

	@Column(name = "correo_b")
	public String getCorreoB() {
		return this.correoB;
	}

	public void setCorreoB(String correoB) {
		this.correoB = correoB;
	}

	@Column(name = "fax_a", length = 12)
	public String getFaxA() {
		return this.faxA;
	}

	public void setFaxA(String faxA) {
		this.faxA = faxA;
	}

	@Column(name = "fax_b", length = 12)
	public String getFaxB() {
		return this.faxB;
	}

	public void setFaxB(String faxB) {
		this.faxB = faxB;
	}
	
	@Column(name = "twitter")
	public String getTwitter() {
		return this.twitter;
	}

	public void setTwitter(String twitter) {
		this.twitter = twitter;
	}

	@Column(name = "rif", length = 20)
	public String getRif() {
		return this.rif;
	}

	public void setRif(String rif) {
		this.rif = rif;
	}

	@Column(name = "nit", length = 20)
	public String getNit() {
		return this.nit;
	}

	public void setNit(String nit) {
		this.nit = nit;
	}

	@Column(name = "mision", nullable = false, columnDefinition = "text")
	public String getMision() {
		return this.mision;
	}

	public void setMision(String mision) {
		this.mision = mision;
	}

	@Column(name = "vision", nullable = false, columnDefinition = "text")
	public String getVision() {
		return this.vision;
	}

	public void setVision(String vision) {
		this.vision = vision;
	}

	@Column(name = "objetivo", nullable = false, columnDefinition = "text")
	public String getObjetivo() {
		return this.objetivo;
	}

	public void setObjetivo(String objetivo) {
		this.objetivo = objetivo;
	}

	@Column(name = "slogan", nullable = false, columnDefinition = "text")
	public String getSlogan() {
		return this.slogan;
	}

	public void setSlogan(String slogan) {
		this.slogan = slogan;
	}

	@Column(name = "horario", nullable = false)
	public String getHorario() {
		return this.horario;
	}

	public void setHorario(String horario) {
		this.horario = horario;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return this.estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "hospital")
	@Fetch(FetchMode.SUBSELECT)
	@OrderBy("id asc")
	public Set<HospitalDifusion> getHospitalDifusions() {
		return this.hospitalDifusions;
	}

	public void setHospitalDifusions(Set<HospitalDifusion> hospitalDifusions) {
		this.hospitalDifusions = hospitalDifusions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "hospital")
	public Set<Area> getAreas() {
		return this.areas;
	}

	public void setAreas(Set<Area> areas) {
		this.areas = areas;
	}

	@Override
	public boolean equals(Object obj) {
		Hospital comparacion = (Hospital) obj;
		return comparacion.getId() == id;
	}

	@Override
	public String toString() {
		return "Modelo Hospital, id: " + id;
	}

}
