package org.ucla.sigma.modelo;

// Generated 09/06/2012 03:00:53 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Dermatologia generated by hbm2java
 */
@Entity
@Table(name = "dermatologia", schema = "public")
public class Dermatologia extends Historial implements java.io.Serializable {

	private String observaciones;
	private String tratamientoEnviado;
	private String tratamientoAplicado;
	private String tratamientoIndicaciones;
	private String patologiaComentario;
	private String diagnosticoDefinitivo;
	private String diagnosticoDiferencial;
	private String diagnosticoTentativo;
	private String diagnosticoProcedimiento;
	private String dondeComenzo;
	private String aparienciaInicial;
	private String avanceEnfermedad;
	private String descripcionAnimalesInfectados;
	private String descripcionPersonasInfectadas;
	private String descripcionPulgas;
	private String descripcionOlor;
	private String descripcionRasca;
	private String productoUtilizado;
	private String efectoProducto;
	private String medicamentoUtilizado;
	private String descripcionMedicamento;
	private String descripcionPiel;
	private String generoElectroparasitos;
	private String caracteristicasInfestacion;
	private String descripcionLesionPrimaria;
	private String descripcionLesionPS;
	private String descripcionLesionSecundaria;
	private String descripcionPatronDistribucion;
	private String descripcionConfiguracion;
	private String descripcionConsistencia;
	private String pulpejos;
	private String unnas;
	private Boolean esTodoAnno; //si o no 
	private Boolean presenciaAnimalesInfectados; // si o no
	private Boolean presenciaPersonasInfectadas; // SI o no
	private Boolean presenciaPulgas;
	private Boolean presenciaOlor; // si o no
	private Boolean presenciaRasca; // si o no
	private Boolean presenciaReflejoDeglutorio;
	private Boolean presenciaReflejoTusigeno;
	private Boolean presenciaElectroParasitos;
	private int temperatura;
	private int perfusionCapilar;
	private int nodulosLinfaticos;
	private Date inicioEnfermedad; 
	private Frecuencia frecuenciaRasca;
	private Frecuencia frecuenciaBano;
	private PalpacionAbdominal palpacionAbdominal;
	private EstadoHidratacion estadoHidratacion;
	private TexturaPilosa texturaPilosa;
	private Color color;
	private Set<LesionPrimaria> lesionPrimaria = new HashSet<LesionPrimaria>(0);
	private Set<LesionPS> lesionPS = new HashSet<LesionPS>(0);
	private Set<LesionSecundaria> lesionSecundaria = new HashSet<LesionSecundaria>(0);
	private Set<PatronDistribucion> patronDistribucion = new HashSet<PatronDistribucion>(0);
	private Set<Configuracion> configuracion = new HashSet<Configuracion>(0);
	private Set<Consistencia> consistencia = new HashSet<Consistencia>(0);
	
	public Dermatologia() {
		super.setTipoServicio(new TipoServicio("DER"));
	}	

	public Dermatologia(int id, Paciente paciente, Veterinario veterinario,Date fecha,Date hora ) {
		
		super.setId(id);
		super.setPaciente(paciente);
		super.setVeterinario(veterinario);
		super.setFecha(fecha);
		super.setHora(hora);
		super.setTipoServicio(new TipoServicio("DER"));
			
	}
	

	@Override
	public String toString() {
		return "Modelo Dermatologia,  id: " + super.getId();
	}

	@Column(name = "observaciones")
	public String getObservaciones() {
		return this.observaciones;
	}

	public void setObservaciones(String observaciones) {
		this.observaciones = observaciones;
	}
	
	@Column(name = "tratamiento_enviado", nullable = false)
	public String getTratamientoEnviado() {
		return this.tratamientoEnviado;
	}

	public void setTratamientoEnviado(String tratamientoEnviado) {
		this.tratamientoEnviado = tratamientoEnviado;
	}

	@Column(name = "tratamiento_aplicado")
	public String getTratamientoAplicado() {
		return this.tratamientoAplicado;
	}

	public void setTratamientoAplicado(String tratamientoAplicado) {
		this.tratamientoAplicado = tratamientoAplicado;
	}

	@Column(name = "tratamiento_indicaciones")
	public String getTratamientoIndicaciones() {
		return this.tratamientoIndicaciones;
	}

	public void setTratamientoIndicaciones(String tratamientoIndicaciones) {
		this.tratamientoIndicaciones = tratamientoIndicaciones;
	}

	@Column(name = "patologia_comentario")
	public String getPatologiaComentario() {
		return this.patologiaComentario;
	}

	public void setPatologiaComentario(String patologiaComentario) {
		this.patologiaComentario = patologiaComentario;
	}

	@Column(name = "diagnostico_definitivo", nullable = false)
	public String getDiagnosticoDefinitivo() {
		return this.diagnosticoDefinitivo;
	}

	public void setDiagnosticoDefinitivo(String diagnosticoDefinitivo) {
		this.diagnosticoDefinitivo = diagnosticoDefinitivo;
	}

	@Column(name = "diagnostico_diferencial")
	public String getDiagnosticoDiferencial() {
		return this.diagnosticoDiferencial;
	}

	public void setDiagnosticoDiferencial(String diagnosticoDiferencial) {
		this.diagnosticoDiferencial = diagnosticoDiferencial;
	}

	@Column(name = "diagnostico_tentativo")
	public String getDiagnosticoTentativo() {
		return this.diagnosticoTentativo;
	}

	public void setDiagnosticoTentativo(String diagnosticoTentativo) {
		this.diagnosticoTentativo = diagnosticoTentativo;
	}

	@Column(name = "diagnostico_procedimiento")
	public String getDiagnosticoProcedimiento() {
		return this.diagnosticoProcedimiento;
	}

	public void setDiagnosticoProcedimiento(String diagnosticoProcedimiento) {
		this.diagnosticoProcedimiento = diagnosticoProcedimiento;
	}
	
	@Temporal(TemporalType.DATE)
	@Column(name = "inicio_enfermedad", nullable = false, length = 13)
	public Date getInicioEnfermedad() {
		return inicioEnfermedad;
	}

	public void setInicioEnfermedad(Date inicioEnfermedad) {
		this.inicioEnfermedad = inicioEnfermedad;
	}

	
	@Column(name = "estodoanno",nullable = false)
	public Boolean getEsTodoAnno() {
		return esTodoAnno;
	}

	public void setEsTodoAnno(Boolean esTodoAnno) {
		this.esTodoAnno = esTodoAnno;
	}

	@Column(name = "dondecomenzo",nullable = false)
	public String getDondeComenzo() {
		return dondeComenzo;
	}

	public void setDondeComenzo(String dondeComenzo) {
		this.dondeComenzo = dondeComenzo;
	}

	@Column(name = "aparienciainicial")
	public String getAparienciaInicial() {
		return aparienciaInicial;
	}

	public void setAparienciaInicial(String aparienciaInicial) {
		this.aparienciaInicial = aparienciaInicial;
	}

	@Column(name = "avanceenfermedad",nullable = false)
	public String getAvanceEnfermedad() {
		return avanceEnfermedad;
	}

	public void setAvanceEnfermedad(String avanceEnfermedad) {
		this.avanceEnfermedad = avanceEnfermedad;
	}

	@Column(name = "presenciaanimalesinfectados",nullable = false)
	public Boolean getPresenciaAnimalesInfectados() {
		return presenciaAnimalesInfectados;
	}

	public void setPresenciaAnimalesInfectados(Boolean presenciaAnimalesInfectados) {
		this.presenciaAnimalesInfectados = presenciaAnimalesInfectados;
	}

	@Column(name = "descripcionAnimalesInfectados")
	public String getDescripcionAnimalesInfectados() {
		return descripcionAnimalesInfectados;
	}

	public void setDescripcionAnimalesInfectados(
			String descripcionAnimalesInfectados) {
		this.descripcionAnimalesInfectados = descripcionAnimalesInfectados;
	}

	
	@Column(name = "presenciapersonasinfectadas",nullable = false)
	public Boolean getPresenciaPersonasInfetadas() {
		return presenciaPersonasInfectadas;
	}

	public void setPresenciaPersonasInfetadas(Boolean presenciaPersonasInfetadas) {
		this.presenciaPersonasInfectadas = presenciaPersonasInfetadas;
	}

	@Column(name = "descripcionpersonasinfectadas")
	public String getDescripcionPersonasInfectadas() {
		return descripcionPersonasInfectadas;
	}

	public void setDescripcionPersonasInfectadas(
			String descripcionPersonasInfectadas) {
		this.descripcionPersonasInfectadas = descripcionPersonasInfectadas;
	}

	@Column(name = "presenciaPulgas",nullable = false)
	public Boolean getPresenciaPulgas() {
		return presenciaPulgas;
	}

	public void setPresenciaPulgas(Boolean presenciaPulgas) {
		this.presenciaPulgas = presenciaPulgas;
	}

	@Column(name = "descripcionPulgas")
	public String getDescripcionPulgas() {
		return descripcionPulgas;
	}

	public void setDescripcionPulgas(String descripcionPulgas) {
		this.descripcionPulgas = descripcionPulgas;
	}

	
	@Column(name = "presenciaolor",nullable = false)
	public Boolean getPresenciaOlor() {
		return presenciaOlor;
	}

	public void setPresenciaOlor(Boolean presenciaOlor) {
		this.presenciaOlor = presenciaOlor;
	}

	@Column(name = "descripcionOlor")
	public String getDescripcionOlor() {
		return descripcionOlor;
	}

	public void setDescripcionOlor(String descripcionOlor) {
		this.descripcionOlor = descripcionOlor;
	}

	
	@Column(name = "presenciarasca",nullable = false)
	public Boolean getPresenciaRasca() {
		return presenciaRasca;
	}

	public void setPresenciaRasca(Boolean presenciaRasca) {
		this.presenciaRasca = presenciaRasca;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "frecuencia_rascaid")
	public Frecuencia getFrecuenciaRasca() {
		return frecuenciaRasca;
	}

	public void setFrecuenciaRasca(Frecuencia frecuenciaRasca) {
		this.frecuenciaRasca = frecuenciaRasca;
	}

	@Column(name = "descripcionrasca")
	public String getDescripcionRasca() {
		return descripcionRasca;
	}

	public void setDescripcionRasca(String descripcionRasca) {
		this.descripcionRasca = descripcionRasca;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "frecuencia_banoid", nullable = false)
	public Frecuencia getFrecuenciaBano() {
		return frecuenciaBano;
	}

	public void setFrecuenciaBano(Frecuencia frecuenciaBano) {
		this.frecuenciaBano = frecuenciaBano;
	}

	@Column(name = "productoutilizado")
	public String getProductoUtilizado() {
		return productoUtilizado;
	}

	public void setProductoUtilizado(String productoUtilizado) {
		this.productoUtilizado = productoUtilizado;
	}

	@Column(name = "efectoproducto")
	public String getEfectoProducto() {
		return efectoProducto;
	}

	public void setEfectoProducto(String efectoProducto) {
		this.efectoProducto = efectoProducto;
	}

	@Column(name = "medicamentoutilizado")
	public String getMedicamentoUtilizado() {
		return medicamentoUtilizado;
	}

	public void setMedicamentoUtilizado(String medicamentoUtilizado) {
		this.medicamentoUtilizado = medicamentoUtilizado;
	}

	@Column(name = "descripcionmedicamento")
	public String getDescripcionMedicamento() {
		return descripcionMedicamento;
	}

	public void setDescripcionMedicamento(String descripcionMedicamento) {
		this.descripcionMedicamento = descripcionMedicamento;
	}
	
	@Column(name = "temperatura",nullable = false)
	public int getTemperatura() {
		return temperatura;
	}

	public void setTemperatura(int temperatura) {
		this.temperatura = temperatura;
	}

	@Column(name = "perfusioncapilar",nullable = false)
	public int getPerfusionCapilar() {
		return perfusionCapilar;
	}

	public void setPerfusionCapilar(int perfusionCapilar) {
		this.perfusionCapilar = perfusionCapilar;
	}

	@Column(name = "noduloslinfaticos",nullable = false)
	public int getNodulosLinfaticos() {
		return nodulosLinfaticos;
	}

	public void setNodulosLinfaticos(int nodulosLinfaticos) {
		this.nodulosLinfaticos = nodulosLinfaticos;
	}

	@Column(name = "presenciareflejodeglutorio",nullable = false)
	public Boolean getPresenciaReflejoDeglutorio() {
		return presenciaReflejoDeglutorio;
	}

	public void setPresenciaReflejoDeglutorio(Boolean presenciaReflejoDeglutorio) {
		this.presenciaReflejoDeglutorio = presenciaReflejoDeglutorio;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "palpacionabdominalid", nullable = false)
	public PalpacionAbdominal getPalpacionAbdominal() {
		return palpacionAbdominal;
	}

	public void setPalpacionAbdominal(PalpacionAbdominal palpacionAbdominal) {
		this.palpacionAbdominal = palpacionAbdominal;
	}

	@Column(name = "presenciareflejotusigeno",nullable = false)
	public Boolean getPresenciaReflejoTusigeno() {
		return presenciaReflejoTusigeno;
	}

	public void setPresenciaReflejoTusigeno(Boolean presenciaReflejoTusigeno) {
		this.presenciaReflejoTusigeno = presenciaReflejoTusigeno;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "estadohidratacionid", nullable = false)
	public EstadoHidratacion getEstadoHidratacion() {
		return estadoHidratacion;
	}

	public void setEstadoHidratacion(EstadoHidratacion estadoHidratacion) {
		this.estadoHidratacion = estadoHidratacion;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "texturapilosaid", nullable = false)
	public TexturaPilosa getTexturaPilosa() {
		return texturaPilosa;
	}

	public void setTexturaPilosa(TexturaPilosa texturaPilosa) {
		this.texturaPilosa = texturaPilosa;
	}
	
	@Column(name = "descripcionpiel",nullable = false)
	public String getDescripcionPiel() {
		return descripcionPiel;
	}

	public void setDescripcionPiel(String descripcionPiel) {
		this.descripcionPiel = descripcionPiel;
	}

	@Column(name = "presenciaelectroparasitos",nullable = false)
	public Boolean getPresenciaElectroParasitos() {
		return presenciaElectroParasitos;
	}

	public void setPresenciaElectroParasitos(Boolean presenciaElectroParasitos) {
		this.presenciaElectroParasitos = presenciaElectroParasitos;
	}

	@Column(name = "generoelectroparasitos")
	public String getGeneroElectroparasitos() {
		return generoElectroparasitos;
	}

	public void setGeneroElectroparasitos(String generoElectroparasitos) {
		this.generoElectroparasitos = generoElectroparasitos;
	}

	@Column(name = "caracteristicasinfestacion")
	public String getCaracteristicasInfestacion() {
		return caracteristicasInfestacion;
	}

	public void setCaracteristicasInfestacion(String caracteristicasInfestacion) {
		this.caracteristicasInfestacion = caracteristicasInfestacion;
	}
	
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dermatologia_lesionprimaria", schema = "public", joinColumns = { @JoinColumn(name = "dermatologiaid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "lesionprimariaid", nullable = false, updatable = false) })
	public Set<LesionPrimaria> getLesionPrimaria() {
		return lesionPrimaria;
	}

	public void setLesionPrimaria(Set<LesionPrimaria> lesionPrimaria) {
		this.lesionPrimaria = lesionPrimaria;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dermatologia_lesionps", schema = "public", joinColumns = { @JoinColumn(name = "dermatologiaid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "lesionpsid", nullable = false, updatable = false) })
	public Set<LesionPS> getLesionPS() {
		return lesionPS;
	}

	public void setLesionPS(Set<LesionPS> lesionPS) {
		this.lesionPS = lesionPS;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dermatologia_lesionsecundaria", schema = "public", joinColumns = { @JoinColumn(name = "dermatologiaid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "lesionsecundariaid", nullable = false, updatable = false) })
	public Set<LesionSecundaria> getLesionSecundaria() {
		return lesionSecundaria;
	}

	public void setLesionSecundaria(Set<LesionSecundaria> lesionSecundaria) {
		this.lesionSecundaria = lesionSecundaria;
	}

	@Column(name = "descripcionlesionprimaria")
	public String getDescripcionLesionPrimaria() {
		return descripcionLesionPrimaria;
	}

	public void setDescripcionLesionPrimaria(String descripcionLesionPrimaria) {
		this.descripcionLesionPrimaria = descripcionLesionPrimaria;
	}

	@Column(name = "descripcionLesionps")
	public String getDescripcionLesionPS() {
		return descripcionLesionPS;
	}

	public void setDescripcionLesionPS(String descripcionLesionPS) {
		this.descripcionLesionPS = descripcionLesionPS;
	}

	@Column(name = "descripcionlesionsecundaria")
	public String getDescripcionLesionSecundaria() {
		return descripcionLesionSecundaria;
	}

	public void setDescripcionLesionSecundaria(String descripcionLesionSecundaria) {
		this.descripcionLesionSecundaria = descripcionLesionSecundaria;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dermatologia_patrondistribucion", schema = "public", joinColumns = { @JoinColumn(name = "dermatologia_patrid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "patrondistribucionid", nullable = false, updatable = false) })
	public Set<PatronDistribucion> getPatronDistribucion() {
		return patronDistribucion;
	}

	public void setPatronDistribucion(Set<PatronDistribucion> patronDistribucion) {
		this.patronDistribucion = patronDistribucion;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dermatologia_configuracion", schema = "public", joinColumns = { @JoinColumn(name = "dermatologia_confid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "configuracionid", nullable = false, updatable = false) })
	public Set<Configuracion> getConfiguracion() {
		return configuracion;
	}

	public void setConfiguracion(Set<Configuracion> configuracion) {
		this.configuracion = configuracion;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dermatologia_consistencia", schema = "public", joinColumns = { @JoinColumn(name = "dermatologia_consid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "consistenciaid", nullable = false, updatable = false) })
	public Set<Consistencia> getConsistencia() {
		return consistencia;
	}

	public void setConsistencia(Set<Consistencia> consistencia) {
		this.consistencia = consistencia;
	}
	
	@Column(name = "descripcionPatronDistribucion")
	public String getDescripcionPatronDistribucion() {
		return descripcionPatronDistribucion;
	}

	public void setDescripcionPatronDistribucion(
			String descripcionPatronDistribucion) {
		this.descripcionPatronDistribucion = descripcionPatronDistribucion;
	}

	@Column(name = "descripcionConfiguracion")
	public String getDescripcionConfiguracion() {
		return descripcionConfiguracion;
	}

	public void setDescripcionConfiguracion(String descripcionConfiguracion) {
		this.descripcionConfiguracion = descripcionConfiguracion;
	}

	@Column(name = "descripcionConsistencia")
	public String getDescripcionConsistencia() {
		return descripcionConsistencia;
	}

	public void setDescripcionConsistencia(String descripcionConsistencia) {
		this.descripcionConsistencia = descripcionConsistencia;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "colorid", nullable = false)
	public Color getColor() {
		return color;
	}

	public void setColor(Color color) {
		this.color = color;
	}

	@Column(name = "pulpejos",nullable = false)
	public String getPulpejos() {
		return pulpejos;
	}

	public void setPulpejos(String pulpejos) {
		this.pulpejos = pulpejos;
	}

	@Column(name = "unnas",nullable = false)
	public String getUnnas() {
		return unnas;
	}

	public void setUnnas(String unnas) {
		this.unnas = unnas;
	}
}