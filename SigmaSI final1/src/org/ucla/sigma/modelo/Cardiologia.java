package org.ucla.sigma.modelo;

// Generated 09/06/2012 03:00:53 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.zkoss.zul.Listbox;
/**
 * Cardiologia generated by hbm2java
 */
@Entity
@Table(name = "cardiologia", schema = "public")
public class Cardiologia extends Historial implements java.io.Serializable {

	private String observaciones;
	private String tratamientoEnviado;
	private String tratamientoAplicado;
	private String tratamientoIndicaciones;
	private String patologiaComentario;
	private String diagnosticoDefinitivo;
	private String diagnosticoDiferencial;
	private String diagnosticoTentativo;
	private String diagnosticoProcedimiento;
	
	private String tratamientoCaridaca;
	private String diagnosticoCardiaca;
	private String hallazgos;
	private int ondaSegMinV;
	private int ondaSeg;
	private int intervaloPRSeg;
	private int intervaloPR;
	private int ondaPSegMin;
	private int ondaPSeg;
	private int intervaloSeg;
	private int complejoQRSMinV;
	private int complejoQRSSeg;
	private BigDecimal ondaT;
	private BigDecimal intervaloQT;
	private BigDecimal complejoQRS;
	private BigDecimal ondaP;
	private BigDecimal ejeElectricoM;
	private BigDecimal frecFemoral;
	private BigDecimal fv;
	private BigDecimal fc;
	private BigDecimal frecCardiaca;
	private BigDecimal icv;
	private BigDecimal pulsoFemoral;
	
	private Silueta silueta;
	private Patron patron;
	private PalpacionAbdominal palpacionAbdominal;
	private Cardiaca cardiaca;
	private Pulmonar pulmonar;
	private Auscultacion auscultacion;
	private Membrana membrana;
	private Ritmo ritmo;
	private Segmento segmento;
	
	
	public Cardiologia() {
		super.setTipoServicio(new TipoServicio("CAR"));
	}

	public Cardiologia(int id, Paciente paciente, Veterinario veterinario,
			Date fecha, Date hora) {
		super.setId(id);
		super.setPaciente(paciente);
		super.setVeterinario(veterinario);
		super.setFecha(fecha);
		super.setHora(hora);
		super.setTipoServicio(new TipoServicio("CAR"));
	}
	
	@Column(name = "observaciones")
	public String getObservaciones() {
		return this.observaciones;
	}

	public void setObservaciones(String observaciones) {
		this.observaciones = observaciones;
	}

	@Column(name = "tratamiento_enviado", nullable = false)
	public String getTratamientoEnviado() {
		return this.tratamientoEnviado;
	}

	public void setTratamientoEnviado(String tratamientoEnviado) {
		this.tratamientoEnviado = tratamientoEnviado;
	}

	@Column(name = "tratamiento_aplicado")
	public String getTratamientoAplicado() {
		return this.tratamientoAplicado;
	}

	public void setTratamientoAplicado(String tratamientoAplicado) {
		this.tratamientoAplicado = tratamientoAplicado;
	}

	@Column(name = "tratamiento_indicaciones")
	public String getTratamientoIndicaciones() {
		return this.tratamientoIndicaciones;
	}

	public void setTratamientoIndicaciones(String tratamientoIndicaciones) {
		this.tratamientoIndicaciones = tratamientoIndicaciones;
	}

	@Column(name = "patologia_comentario")
	public String getPatologiaComentario() {
		return this.patologiaComentario;
	}

	public void setPatologiaComentario(String patologiaComentario) {
		this.patologiaComentario = patologiaComentario;
	}

	@Column(name = "diagnostico_definitivo", nullable = false)
	public String getDiagnosticoDefinitivo() {
		return this.diagnosticoDefinitivo;
	}

	public void setDiagnosticoDefinitivo(String diagnosticoDefinitivo) {
		this.diagnosticoDefinitivo = diagnosticoDefinitivo;
	}

	@Column(name = "diagnostico_diferencial")
	public String getDiagnosticoDiferencial() {
		return this.diagnosticoDiferencial;
	}

	public void setDiagnosticoDiferencial(String diagnosticoDiferencial) {
		this.diagnosticoDiferencial = diagnosticoDiferencial;
	}

	@Column(name = "diagnostico_tentativo")
	public String getDiagnosticoTentativo() {
		return this.diagnosticoTentativo;
	}

	public void setDiagnosticoTentativo(String diagnosticoTentativo) {
		this.diagnosticoTentativo = diagnosticoTentativo;
	}

	@Column(name = "diagnostico_procedimiento")
	public String getDiagnosticoProcedimiento() {
		return this.diagnosticoProcedimiento;
	}

	public void setDiagnosticoProcedimiento(String diagnosticoProcedimiento) {
		this.diagnosticoProcedimiento = diagnosticoProcedimiento;
	}
	
	@Column(name = "tratamiento_cardiaca")
	public String getTratamientoCaridaca() {
		return tratamientoCaridaca;
	}

	public void setTratamientoCaridaca(String tratamientoCaridaca) {
		this.tratamientoCaridaca = tratamientoCaridaca;
	}

	@Column(name = "diagnostico_cardiaca")
	public String getDiagnosticoCardiaca() {
		return diagnosticoCardiaca;
	}

	public void setDiagnosticoCardiaca(String diagnosticoCardiaca) {
		this.diagnosticoCardiaca = diagnosticoCardiaca;
	}

	@Column(name = "hallazgos")
	public String getHallazgos() {
		return hallazgos;
	}

	public void setHallazgos(String hallazgos) {
		this.hallazgos = hallazgos;
	}
	
	@Column(name = "onda_seg_minv")
	
	public int getOndaSegMinV() {
		return ondaSegMinV;
	}

	public void setOndaSegMinV(int ondaSegMinV) {
		this.ondaSegMinV = ondaSegMinV;
	}
	
	@Column(name = "onda_seg")
	public int getOndaSeg() {
		return ondaSeg;
	}

	public void setOndaSeg(int ondaSeg) {
		this.ondaSeg = ondaSeg;
	}

	@Column(name = "intervalo_pr_seg")
	public int getIntervaloPRSeg() {
		return intervaloPRSeg;
	}

	public void setIntervaloPRSeg(int intervaloPRSeg) {
		this.intervaloPRSeg = intervaloPRSeg;
	}

	@Column(name = "intervalo_pr")
	public int getIntervaloPR() {
		return intervaloPR;
	}

	public void setIntervaloPR(int intervaloPR) {
		this.intervaloPR = intervaloPR;
	}

	@Column(name = "onda_ps_min")
	public int getOndaPSegMin() {
		return ondaPSegMin;
	}

	public void setOndaPSegMin(int ondaPSegMin) {
		this.ondaPSegMin = ondaPSegMin;
	}

	@Column(name = "onda_ps_seg")
	public int getOndaPSeg() {
		return ondaPSeg;
	}

	public void setOndaPSeg(int ondaPSeg) {
		this.ondaPSeg = ondaPSeg;
	}

	@Column(name = "intervalo_seg")
	public int getIntervaloSeg() {
		return intervaloSeg;
	}

	public void setIntervaloSeg(int intervaloSeg) {
		this.intervaloSeg = intervaloSeg;
	}

	@Column(name = "complejo_qrs_minv")
	public int getComplejoQRSMinV() {
		return complejoQRSMinV;
	}

	public void setComplejoQRSMinV(int complejoQRSMinV) {
		this.complejoQRSMinV = complejoQRSMinV;
	}

	@Column(name = "complejo_qrs_seg")
	public int getComplejoQRSSeg() {
		return complejoQRSSeg;
	}

	public void setComplejoQRSSeg(int complejoQRSSeg) {
		this.complejoQRSSeg = complejoQRSSeg;
	}

	@Column(name = "onda_t")
	public BigDecimal getOndaT() {
		return ondaT;
	}

	public void setOndaT(BigDecimal ondaT) {
		this.ondaT = ondaT;
	}

	@Column(name = "intervalo_qt")
	public BigDecimal getIntervaloQT() {
		return intervaloQT;
	}

	public void setIntervaloQT(BigDecimal intervaloQT) {
		this.intervaloQT = intervaloQT;
	}

	@Column(name = "complejo_qrs")
	public BigDecimal getComplejoQRS() {
		return complejoQRS;
	}

	public void setComplejoQRS(BigDecimal complejoQRS) {
		this.complejoQRS = complejoQRS;
	}

	@Column(name = "onda_p")
	public BigDecimal getOndaP() {
		return ondaP;
	}

	public void setOndaP(BigDecimal ondaP) {
		this.ondaP = ondaP;
	}

	@Column(name = "eje_electronicom")
	public BigDecimal getEjeElectricoM() {
		return ejeElectricoM;
	}

	public void setEjeElectricoM(BigDecimal ejeElectricoM) {
		this.ejeElectricoM = ejeElectricoM;
	}

	@Column(name = "frecuencia_femoral")
	public BigDecimal getFrecFemoral() {
		return frecFemoral;
	}

	public void setFrecFemoral(BigDecimal frecFemoral) {
		this.frecFemoral = frecFemoral;
	}

	@Column(name = "fv")
	public BigDecimal getFv() {
		return fv;
	}

	public void setFv(BigDecimal fV) {
		this.fv = fV;
	}

	@Column(name = "fc")
	public BigDecimal getFc() {
		return fc;
	}

	public void setFc(BigDecimal fC) {
		this.fc = fC;
	}

	@Column(name = "frecencia_cardiaca")
	public BigDecimal getFrecCardiaca() {
		return frecCardiaca;
	}

	public void setFrecCardiaca(BigDecimal frecCardiaca) {
		this.frecCardiaca = frecCardiaca;
	}

	@Column(name = "icv")
	public BigDecimal getIcv() {
		return icv;
	}

	public void setIcv(BigDecimal icv) {
		this.icv = icv;
	}
	
	@Column(name = "pulso_femoral")
	public BigDecimal getPulsoFemoral() {
		return pulsoFemoral;
	}

	public void setPulsoFemoral(BigDecimal pulsoFemoral) {
		this.pulsoFemoral = pulsoFemoral;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "siluetaid", nullable = false)
	public Silueta getSilueta() {
		return silueta;
	}

	public void setSilueta(Silueta silueta) {
		this.silueta = silueta;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "patronid", nullable = false)
	public Patron getPatron() {
		return patron;
	}

	public void setPatron(Patron patron) {
		this.patron = patron;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "palpacionAbdominalid", nullable = false)
	public PalpacionAbdominal getPalpacionAbdominal() {
		return palpacionAbdominal;
	}
	
	public void setPalpacionAbdominal(PalpacionAbdominal palpacionAbdominal) {
		this.palpacionAbdominal = palpacionAbdominal;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "cardiacaid", nullable = false)
	public Cardiaca getCardiaca() {
		return cardiaca;
	}

	public void setCardiaca(Cardiaca cardiaca) {
		this.cardiaca = cardiaca;
	}	

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "pulmonarid", nullable = false)
	public Pulmonar getPulmonar() {
		return pulmonar;
	}

	public void setPulmonar(Pulmonar pulmonar) {
		this.pulmonar = pulmonar;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "auscultacionid", nullable = false)
	public Auscultacion getAuscultacion() {
		return auscultacion;
	}

	public void setAuscultacion(Auscultacion auscultacion) {
		this.auscultacion = auscultacion;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "membranaid", nullable = false)
	public Membrana getMembrana() {
		return membrana;
	}

	public void setMembrana(Membrana membrana) {
		this.membrana = membrana;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "ritmoid", nullable = false)
	public Ritmo getRitmo() {
		return ritmo;
	}

	public void setRitmo(Ritmo ritmo) {
		this.ritmo = ritmo;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "segmentoid", nullable = false)
	public Segmento getSegmento() {
		return segmento;
	}

	public void setSegmento(Segmento segmento) {
		this.segmento = segmento;
	}

	@Override
	public String toString() {
		return "Modelo Cardiologia,  id: " + super.getId();
	}

}
