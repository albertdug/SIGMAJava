package org.ucla.sigma.modelo;

// Generated 03/06/2012 10:45:11 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

/**
 * TipoMensaje generated by hbm2java
 */
@Entity
@Table(name = "tipo_mensaje", schema = "public")
public class TipoMensaje implements java.io.Serializable {

	private String id;
	private String titulo;
	private String icono;
	private Set<Mensaje> mensajes = new HashSet<Mensaje>(0);
	private Set<Boton> botons = new HashSet<Boton>(0);

	public TipoMensaje() {
	}

	public TipoMensaje(String id, String titulo) {
		this.id = id;
		this.titulo = titulo;
	}

	public TipoMensaje(String id, String titulo, String icono,
			Set<Mensaje> mensajes, Set<Boton> botons) {
		this.id = id;
		this.titulo = titulo;
		this.icono = icono;
		this.mensajes = mensajes;
		this.botons = botons;
	}

	@Id
	@SequenceGenerator(name = "SEQ_TIPO_MENSAJE", sequenceName = "seq_tipo_mensaje", allocationSize = 1, schema = "public")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SEQ_TIPO_MENSAJE")
	@Column(name = "id", unique = true, nullable = false, length = 20)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@Column(name = "titulo", nullable = false, length = 20)
	public String getTitulo() {
		return this.titulo;
	}

	public void setTitulo(String titulo) {
		this.titulo = titulo;
	}

	@Column(name = "icono")
	public String getIcono() {
		return this.icono;
	}

	public void setIcono(String icono) {
		this.icono = icono;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tipoMensaje")
	public Set<Mensaje> getMensajes() {
		return this.mensajes;
	}

	public void setMensajes(Set<Mensaje> mensajes) {
		this.mensajes = mensajes;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "tipo_mensaje_boton", schema = "public", joinColumns = { @JoinColumn(name = "tipo_mensajeid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "botonid", nullable = false, updatable = false) })
	public Set<Boton> getBotons() {
		return this.botons;
	}

	public void setBotons(Set<Boton> botons) {
		this.botons = botons;
	}

	@Override
	public boolean equals(Object obj) {
		TipoMensaje comparacion = (TipoMensaje) obj;
		return comparacion.getId() == id;
	}

	@Override
	public String toString() {
		return "Modelo TipoMensaje, id: " + id;
	}

}
