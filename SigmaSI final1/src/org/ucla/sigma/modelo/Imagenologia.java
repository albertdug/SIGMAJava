package org.ucla.sigma.modelo;

// Generated 09/06/2012 03:00:53 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Imagenologia generated by hbm2java
 */
@Entity
@Table(name = "imagenologia", schema = "public")
public class Imagenologia extends Historial implements java.io.Serializable {

	
	private String hallazgos;
	private String conclusion;
	private String observaciones;
	private String tratamientoEnviado;
	private String tratamientoAplicado;
	private String tratamientoIndicaciones;
	private String patologiaComentario;
	private String diagnosticoDefinitivo;
	private String diagnosticoDiferencial;
	private String diagnosticoTentativo;
	private String diagnosticoProcedimiento;
	private Set<EspImagenologia> espImagenologias = new HashSet<EspImagenologia>(0);
		
	
	public Imagenologia() {
		super();
		// TODO Auto-generated constructor stub
		super.setTipoServicio(new TipoServicio("IMG"));
	}

	public Imagenologia(int id, Paciente paciente, Veterinario veterinario,
			TipoServicio tipoServicio, Date fecha, Date hora, char estatus,
			Dermatologia dermatologia, Oftalmologia oftalmologia,
			Cirugia cirugia, ConsultaGeneral consultaGeneral,
			Set<Sintoma> sintomas, Neurologia neurologia, Defuncion defuncion,
			Set<Patologia> patologias, Set<Tratamiento> tratamientos,
			Set<Servicio> servicios, PostOperatorio postOperatorio,
			Laboratorio laboratorio, Traumatologia traumatologia,
			Cardiologia cardiologia, FichaMedica fichaMedica,
			Imagenologia imagenologia, PreOperatorio preOperatorio,
			Set<Referencia> referencias) {
		super(id, paciente, veterinario, tipoServicio, fecha, hora, estatus,
				dermatologia, oftalmologia, cirugia, consultaGeneral, sintomas,
				neurologia, defuncion, patologias, tratamientos, servicios,
				postOperatorio, laboratorio, traumatologia, cardiologia, fichaMedica,
				imagenologia, preOperatorio, referencias);
		// TODO Auto-generated constructor stub
	}

	public Imagenologia(int id, Paciente paciente, Veterinario veterinario,
			TipoServicio tipoServicio, Date fecha, Date hora, char estatus) {
		super(id, paciente, veterinario, tipoServicio, fecha, hora, estatus);
		// TODO Auto-generated constructor stub
	}

	public Imagenologia(String hallazgos, String conclusion,
			String observaciones, String tratamientoEnviado,
			String tratamientoAplicado, String tratamientoIndicaciones,
			String patologiaComentario, String diagnosticoDefinitivo,
			String diagnosticoDiferencial, String diagnosticoTentativo,
			String diagnosticoProcedimiento) {
		super();
		this.hallazgos = hallazgos;
		this.conclusion = conclusion;
		this.observaciones = observaciones;
		this.tratamientoEnviado = tratamientoEnviado;
		this.tratamientoAplicado = tratamientoAplicado;
		this.tratamientoIndicaciones = tratamientoIndicaciones;
		this.patologiaComentario = patologiaComentario;
		this.diagnosticoDefinitivo = diagnosticoDefinitivo;
		this.diagnosticoDiferencial = diagnosticoDiferencial;
		this.diagnosticoTentativo = diagnosticoTentativo;
		this.diagnosticoProcedimiento = diagnosticoProcedimiento;
	}

	@Column(name = "observaciones")
	public String getObservaciones() {
		return this.observaciones;
	}

	public void setObservaciones(String observaciones) {
		this.observaciones = observaciones;
	}

	@Column(name = "tratamiento_enviado", nullable = false)
	public String getTratamientoEnviado() {
		return this.tratamientoEnviado;
	}

	public void setTratamientoEnviado(String tratamientoEnviado) {
		this.tratamientoEnviado = tratamientoEnviado;
	}

	@Column(name = "tratamiento_aplicado")
	public String getTratamientoAplicado() {
		return this.tratamientoAplicado;
	}

	public void setTratamientoAplicado(String tratamientoAplicado) {
		this.tratamientoAplicado = tratamientoAplicado;
	}

	@Column(name = "tratamiento_indicaciones")
	public String getTratamientoIndicaciones() {
		return this.tratamientoIndicaciones;
	}

	public void setTratamientoIndicaciones(String tratamientoIndicaciones) {
		this.tratamientoIndicaciones = tratamientoIndicaciones;
	}

	@Column(name = "patologia_comentario")
	public String getPatologiaComentario() {
		return this.patologiaComentario;
	}

	public void setPatologiaComentario(String patologiaComentario) {
		this.patologiaComentario = patologiaComentario;
	}

	@Column(name = "diagnostico_definitivo", nullable = false)
	public String getDiagnosticoDefinitivo() {
		return this.diagnosticoDefinitivo;
	}

	public void setDiagnosticoDefinitivo(String diagnosticoDefinitivo) {
		this.diagnosticoDefinitivo = diagnosticoDefinitivo;
	}

	@Column(name = "diagnostico_diferencial")
	public String getDiagnosticoDiferencial() {
		return this.diagnosticoDiferencial;
	}

	public void setDiagnosticoDiferencial(String diagnosticoDiferencial) {
		this.diagnosticoDiferencial = diagnosticoDiferencial;
	}

	@Column(name = "diagnostico_tentativo")
	public String getDiagnosticoTentativo() {
		return this.diagnosticoTentativo;
	}

	public void setDiagnosticoTentativo(String diagnosticoTentativo) {
		this.diagnosticoTentativo = diagnosticoTentativo;
	}

	@Column(name = "diagnostico_procedimiento")
	public String getDiagnosticoProcedimiento() {
		return this.diagnosticoProcedimiento;
	}

	public void setDiagnosticoProcedimiento(String diagnosticoProcedimiento) {
		this.diagnosticoProcedimiento = diagnosticoProcedimiento;
	}

	@Column(name = "hallazgos")
	public String getHallazgos() {
		return hallazgos;
	}

	public void setHallazgos(String hallazgos) {
		this.hallazgos = hallazgos;
	}

	@Column(name = "conclusion")
	public String getConclusion() {
		return conclusion;
	}

	public void setConclusion(String conclusion) {
		this.conclusion = conclusion;
	}
	
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "imagenologia_espeficicacion", schema = "public", joinColumns = { @JoinColumn(name = "imagenologiaid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "esp_imagenologiaid", nullable = false, updatable = false) })
	public Set<EspImagenologia> getEspImagenologias() {
		return espImagenologias;
	}

	public void setEspImagenologias(Set<EspImagenologia> espImagenologias) {
		this.espImagenologias = espImagenologias;
	}

	@Override
	public String toString() {
		return "Modelo Imagenologia,  id: " + super.getId();
	}

}
