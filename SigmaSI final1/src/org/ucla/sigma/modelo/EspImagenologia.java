package org.ucla.sigma.modelo;

// Generated 03/06/2012 11:28:14 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

/**
 * Raza generated by hbm2java
 */
@Entity
@Table(name = "esp_imagenologia" , schema = "public")
public class EspImagenologia implements java.io.Serializable {

	private int id;
	private TipoImagenologia tipoImagenologia;
	private String nombre;
	private char estatus = 'A';
	private Set<Imagenologia> imagenologias = new HashSet<Imagenologia>(0);
	private Set<ReferenciaImagenologia> referenciaImagenologias = new HashSet<ReferenciaImagenologia>(0);
	
	public EspImagenologia() {
		
	}

	public EspImagenologia(int id, TipoImagenologia tipoImagenologia,
			String nombre, char estatus) {
		super();
		this.id = id;
		this.tipoImagenologia = tipoImagenologia;
		this.nombre = nombre;
		this.estatus = estatus;
	}

	@Id
	@SequenceGenerator(name = "SEQ_ESPIMAGENOL", sequenceName = "seq_espimagenol", allocationSize = 1, schema = "public")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SEQ_ESPIMAGENOL")
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "tipoimagid", nullable = false)
	public TipoImagenologia getTipoImagenologia() {
		return tipoImagenologia;
	}

	public void setTipoImagenologia(TipoImagenologia tipoImagenologia) {
		this.tipoImagenologia = tipoImagenologia;
	}

	@Column(name = "nombre", nullable = false)
	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}
	
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "imagenologia_espeficicacion", schema = "public", joinColumns = { @JoinColumn(name = "esp_imagenologiaid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "imagenologiaid", nullable = false, updatable = false) })
	public Set<Imagenologia> getImagenologias() {
		return imagenologias;
	}

	public void setImagenologias(Set<Imagenologia> imagenologias) {
		this.imagenologias = imagenologias;
	}

	@Override
	public boolean equals(Object obj) {
		EspImagenologia comparacion = (EspImagenologia) obj;
		return comparacion.getId() == id;
	}

	@Override
	public String toString() {
		return "Modelo Especificación Imagenología, id: " + id;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "referencia_imagenologia_esp_imagenologia", schema = "public", joinColumns = { @JoinColumn(name = "especificacion_imagenologiaid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "referencia_imagenologiaid", nullable = false, updatable = false) })
	public Set<ReferenciaImagenologia> getReferenciaImagenologias() {
		return referenciaImagenologias;
	}

	public void setReferenciaImagenologias(
			Set<ReferenciaImagenologia> referenciaImagenologias) {
		this.referenciaImagenologias = referenciaImagenologias;
	}
	
}

