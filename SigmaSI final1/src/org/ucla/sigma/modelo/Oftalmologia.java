package org.ucla.sigma.modelo;

// Generated 09/06/2012 03:00:53 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Oftalmologia generated by hbm2java
 */
@Entity
@Table(name = "oftalmologia", schema = "public")
public class Oftalmologia extends Historial implements java.io.Serializable {
	
	private Reflejo reflejoIzq;
	private Reflejo reflejoDer;
	private String observaciones;
	private String tratamientoEnviado;
	private String tratamientoAplicado;
	private String tratamientoIndicaciones;
	private String patologiaComentario;
	private String diagnosticoDefinitivo;
	private String diagnosticoDiferencial;
	private String diagnosticoTentativo;
	private String diagnosticoProcedimiento;
	private boolean amenazaIzq;
	private boolean amenazaDer;
	private boolean fundicoIzq;
	private boolean fundicoDer;
	private boolean fluorescenciaIzq;
	private boolean fluorescenciaDer;
	private boolean bengalaDer;
	private boolean bengalaIzq;
	private double dcPIODer;
	private double dcPIOIzq;
	private double dcShirmerDer;
	private double dcShirmerIzq;
	

	
	public Oftalmologia() {
		super.setTipoServicio(new TipoServicio("OFT"));
	}

	public Oftalmologia(Reflejo reflejoIzq, Reflejo reflejoDer,
			String observaciones, String tratamientoEnviado,
			String tratamientoAplicado, String tratamientoIndicaciones,
			String patologiaComentario, String diagnosticoDefinitivo,
			String diagnosticoDiferencial, String diagnosticoTentativo,
			String diagnosticoProcedimiento, boolean amenazaIzq,
			boolean amenazaDer, boolean fundicoIzq, boolean fundicoDer,
			boolean fluorescenciaIzq, boolean fluorescenciaDer,
			boolean bengalaDer, boolean bengalaIzq, double dcPIODer,
			double dcPIOIzq, double dcShirmerDer, double dcShirmerIzq) {
		super();
		this.reflejoIzq = reflejoIzq;
		this.reflejoDer = reflejoDer;
		this.observaciones = observaciones;
		this.tratamientoEnviado = tratamientoEnviado;
		this.tratamientoAplicado = tratamientoAplicado;
		this.tratamientoIndicaciones = tratamientoIndicaciones;
		this.patologiaComentario = patologiaComentario;
		this.diagnosticoDefinitivo = diagnosticoDefinitivo;
		this.diagnosticoDiferencial = diagnosticoDiferencial;
		this.diagnosticoTentativo = diagnosticoTentativo;
		this.diagnosticoProcedimiento = diagnosticoProcedimiento;
		this.amenazaIzq = amenazaIzq;
		this.amenazaDer = amenazaDer;
		this.fundicoIzq = fundicoIzq;
		this.fundicoDer = fundicoDer;
		this.fluorescenciaIzq = fluorescenciaIzq;
		this.fluorescenciaDer = fluorescenciaDer;
		this.bengalaDer = bengalaDer;
		this.bengalaIzq = bengalaIzq;
		this.dcPIODer = dcPIODer;
		this.dcPIOIzq = dcPIOIzq;
		this.dcShirmerDer = dcShirmerDer;
		this.dcShirmerIzq = dcShirmerIzq;
	}



	public Oftalmologia(int id, Paciente paciente, Veterinario veterinario,
			TipoServicio tipoServicio, Date fecha, Date hora, char estatus) {
		super(id, paciente, veterinario, tipoServicio, fecha, hora, estatus);
		// TODO Auto-generated constructor stub
	}



	public Oftalmologia(Reflejo reflejoIzq, Reflejo reflejoDer,
			String observaciones, String tratamientoEnviado,
			String tratamientoAplicado, String tratamientoIndicaciones,
			String patologiaComentario, String diagnosticoDefinitivo,
			String diagnosticoDiferencial, String diagnosticoTentativo,
			String diagnosticoProcedimiento) {
		super();
		this.reflejoIzq = reflejoIzq;
		this.reflejoDer = reflejoDer;
		this.observaciones = observaciones;
		this.tratamientoEnviado = tratamientoEnviado;
		this.tratamientoAplicado = tratamientoAplicado;
		this.tratamientoIndicaciones = tratamientoIndicaciones;
		this.patologiaComentario = patologiaComentario;
		this.diagnosticoDefinitivo = diagnosticoDefinitivo;
		this.diagnosticoDiferencial = diagnosticoDiferencial;
		this.diagnosticoTentativo = diagnosticoTentativo;
		this.diagnosticoProcedimiento = diagnosticoProcedimiento;
	}



	@Column(name = "observaciones")
	public String getObservaciones() {
		return this.observaciones;
	}

	public void setObservaciones(String observaciones) {
		this.observaciones = observaciones;
	}

	@Column(name = "tratamiento_enviado", nullable = false)
	public String getTratamientoEnviado() {
		return this.tratamientoEnviado;
	}

	public void setTratamientoEnviado(String tratamientoEnviado) {
		this.tratamientoEnviado = tratamientoEnviado;
	}

	@Column(name = "tratamiento_aplicado")
	public String getTratamientoAplicado() {
		return this.tratamientoAplicado;
	}

	public void setTratamientoAplicado(String tratamientoAplicado) {
		this.tratamientoAplicado = tratamientoAplicado;
	}

	@Column(name = "tratamiento_indicaciones")
	public String getTratamientoIndicaciones() {
		return this.tratamientoIndicaciones;
	}

	public void setTratamientoIndicaciones(String tratamientoIndicaciones) {
		this.tratamientoIndicaciones = tratamientoIndicaciones;
	}

	@Column(name = "patologia_comentario")
	public String getPatologiaComentario() {
		return this.patologiaComentario;
	}

	public void setPatologiaComentario(String patologiaComentario) {
		this.patologiaComentario = patologiaComentario;
	}

	@Column(name = "diagnostico_definitivo", nullable = false)
	public String getDiagnosticoDefinitivo() {
		return this.diagnosticoDefinitivo;
	}

	public void setDiagnosticoDefinitivo(String diagnosticoDefinitivo) {
		this.diagnosticoDefinitivo = diagnosticoDefinitivo;
	}

	@Column(name = "diagnostico_diferencial")
	public String getDiagnosticoDiferencial() {
		return this.diagnosticoDiferencial;
	}

	public void setDiagnosticoDiferencial(String diagnosticoDiferencial) {
		this.diagnosticoDiferencial = diagnosticoDiferencial;
	}

	@Column(name = "diagnostico_tentativo")
	public String getDiagnosticoTentativo() {
		return this.diagnosticoTentativo;
	}

	public void setDiagnosticoTentativo(String diagnosticoTentativo) {
		this.diagnosticoTentativo = diagnosticoTentativo;
	}

	@Column(name = "diagnostico_procedimiento")
	public String getDiagnosticoProcedimiento() {
		return this.diagnosticoProcedimiento;
	}

	public void setDiagnosticoProcedimiento(String diagnosticoProcedimiento) {
		this.diagnosticoProcedimiento = diagnosticoProcedimiento;
	}
	
	@Column(name = "amenaza_izq")
	public boolean isAmenazaIzq() {
		return amenazaIzq;
	}

	public void setAmenazaIzq(boolean amenazaIzq) {
		this.amenazaIzq = amenazaIzq;
	}

	@Column(name = "amenaza_der")
	public boolean isAmenazaDer() {
		return amenazaDer;
	}

	public void setAmenazaDer(boolean amenazDer) {
		this.amenazaDer = amenazDer;
	}

	@Column(name = "fundico_izq")
	public boolean isFundicoIzq() {
		return fundicoIzq;
	}

	public void setFundicoIzq(boolean fundicoIzq) {
		this.fundicoIzq = fundicoIzq;
	}

	@Column(name = "fundico_der")
	public boolean isFundicoDer() {
		return fundicoDer;
	}

	public void setFundicoDer(boolean fundicoDer) {
		this.fundicoDer = fundicoDer;
	}

	@Column(name = "fluorescencia_izq")
	public boolean isFluorescenciaIzq() {
		return fluorescenciaIzq;
	}

	public void setFluorescenciaIzq(boolean fluorescenciaIzq) {
		this.fluorescenciaIzq = fluorescenciaIzq;
	}

	@Column(name = "fluorescencia_der")
	public boolean isFluorescenciaDer() {
		return fluorescenciaDer;
	}

	public void setFluorescenciaDer(boolean fluorescenciaDer) {
		this.fluorescenciaDer = fluorescenciaDer;
	}

	@Column(name = "bengala_der")
	public boolean isBengalaDer() {
		return bengalaDer;
	}

	public void setBengalaDer(boolean bengalaDer) {
		this.bengalaDer = bengalaDer;
	}

	@Column(name = "bengala_izq")
	public boolean isBengalaIzq() {
		return bengalaIzq;
	}

	public void setBengalaIzq(boolean bengalaIzq) {
		this.bengalaIzq = bengalaIzq;
	}

	@Column(name = "pio_der")
	public double getDcPIODer() {
		return dcPIODer;
	}

	public void setDcPIODer(double dcPIODer) {
		this.dcPIODer = dcPIODer;
	}

	@Column(name = "pio_izq")
	public double getDcPIOIzq() {
		return dcPIOIzq;
	}

	public void setDcPIOIzq(double dcPIOIzq) {
		this.dcPIOIzq = dcPIOIzq;
	}
	
	@Column(name = "Shirmer_der")
	public double getDcShirmerDer() {
		return dcShirmerDer;
	}

	public void setDcShirmerDer(double dcShirmerDer) {
		this.dcShirmerDer = dcShirmerDer;
	}

	@Column(name = "Shirmer_izq")
	public double getDcShirmerIzq() {
		return dcShirmerIzq;
	}

	public void setDcShirmerIzq(double dcShirmerIzq) {
		this.dcShirmerIzq = dcShirmerIzq;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idreflejo_izq", nullable = false)
	public Reflejo getReflejoIzq() {
		return reflejoIzq;
	}
	
	public void setReflejoIzq(Reflejo reflejoIzq) {
		this.reflejoIzq = reflejoIzq;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idreflejo_der", nullable = false)
	public Reflejo getReflejoDer() {
		return reflejoDer;
	}



	public void setReflejoDer(Reflejo reflejoDer) {
		this.reflejoDer = reflejoDer;
	}



	@Override
	public String toString() {
		return "Modelo Oftalmologia,  id: " + super.getId();
	}

	
	

}
