package org.ucla.sigma.modelo;

// Generated 03/06/2012 11:28:14 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Adjunto generated by hbm2java
 */
@Entity
@Table(name = "adjunto", schema = "public")
public class Adjunto implements java.io.Serializable {

	private int id;
	private String nombre;
	private byte[] bytes;
	private String extension;
	private Date creacion;
	private char estatus = 'A';
	private Set<Publicacion> publicacions = new HashSet<Publicacion>(0);

	public Adjunto() {
	}

	public Adjunto(int id, byte[] bytes, char estatus) {
		this.id = id;
		this.bytes = bytes;
		this.estatus = estatus;
	}

	public Adjunto(int id, byte[] bytes, char estatus,
			Set<Publicacion> publicacions) {
		this.id = id;
		this.bytes = bytes;
		this.estatus = estatus;
		this.publicacions = publicacions;
	}

	@Id
	@SequenceGenerator(name = "SEQ_ADJUNTO", sequenceName = "seq_adjunto", allocationSize = 1, schema = "public")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SEQ_ADJUNTO")
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "nombre", nullable = false)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "bytes", nullable = false)
	public byte[] getBytes() {
		return this.bytes;
	}

	public void setBytes(byte[] bytes) {
		this.bytes = bytes;
	}

	@Column(name = "extension", nullable = false, length = 5)
	public String getExtension() {
		return this.extension;
	}

	public void setExtension(String extension) {
		this.extension = extension;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "creacion", nullable = false, length = 13)
	public Date getCreacion() {
		return this.creacion;
	}

	public void setCreacion(Date creacion) {
		this.creacion = creacion;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return this.estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "publicacion_adjunto", schema = "public", joinColumns = { @JoinColumn(name = "adjuntoid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "publicacionid", nullable = false, updatable = false) })
	@Fetch(FetchMode.SUBSELECT)
	public Set<Publicacion> getPublicacions() {
		return this.publicacions;
	}

	public void setPublicacions(Set<Publicacion> publicacions) {
		this.publicacions = publicacions;
	}

	@Override
	public boolean equals(Object obj) {
		Adjunto comparacion = (Adjunto) obj;
		return comparacion.getId() == id;
	}

	@Override
	public String toString() {
		return "Modelo Adjunto, id: " + id;
	}

}
