package org.ucla.sigma.modelo;

// Generated 15/07/2012 02:32:55 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Referencia generated by hbm2java
 */
@Entity
@Table(name = "referencia", schema = "public")
public class Referencia implements java.io.Serializable {

	private int id;
	private Historial historial;
	private TipoReferencia tipoReferencia;
	private TipoServicio tipoServicio;
	private Date fechaExpedicion;
	private Date fechaCita;
	private char estatus;
	private ReferenciaImagenologia referenciaImagenologia;
	private ReferenciaCirugia referenciaCirugia;
	private ReferenciaLaboratorio referenciaLaboratorio;
	private ReferenciaConsultaEspecializada referenciaConsultaEspecializada;

	public Referencia() {
	}

	public Referencia(int id, Historial historial,
			TipoReferencia tipoReferencia, TipoServicio tipoServicio,
			Date fechaExpedicion, char estatus) {
		this.id = id;
		this.historial = historial;
		this.tipoReferencia = tipoReferencia;
		this.tipoServicio = tipoServicio;
		this.fechaExpedicion = fechaExpedicion;
		this.estatus = estatus;
	}

	public Referencia(int id, Historial historial,
			TipoReferencia tipoReferencia, TipoServicio tipoServicio,
			Date fechaExpedicion, Date fechaCita, char estatus,
			ReferenciaImagenologia referenciaImagenologia,
			ReferenciaCirugia referenciaCirugia,
			ReferenciaLaboratorio referenciaLaboratorio,
			ReferenciaConsultaEspecializada referenciaConsultaEspecializada) {
		this.id = id;
		this.historial = historial;
		this.tipoReferencia = tipoReferencia;
		this.tipoServicio = tipoServicio;
		this.fechaExpedicion = fechaExpedicion;
		this.fechaCita = fechaCita;
		this.estatus = estatus;
		this.referenciaImagenologia = referenciaImagenologia;
		this.referenciaCirugia = referenciaCirugia;
		this.referenciaLaboratorio = referenciaLaboratorio;
		this.referenciaConsultaEspecializada = referenciaConsultaEspecializada;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "historialid", nullable = false)
	public Historial getHistorial() {
		return this.historial;
	}

	public void setHistorial(Historial historial) {
		this.historial = historial;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipo_referenciaid", nullable = false)
	public TipoReferencia getTipoReferencia() {
		return this.tipoReferencia;
	}

	public void setTipoReferencia(TipoReferencia tipoReferencia) {
		this.tipoReferencia = tipoReferencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipo_servicioid", nullable = false)
	public TipoServicio getTipoServicio() {
		return this.tipoServicio;
	}

	public void setTipoServicio(TipoServicio tipoServicio) {
		this.tipoServicio = tipoServicio;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_expedicion", nullable = false, length = 13)
	public Date getFechaExpedicion() {
		return this.fechaExpedicion;
	}

	public void setFechaExpedicion(Date fechaExpedicion) {
		this.fechaExpedicion = fechaExpedicion;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_cita", length = 13)
	public Date getFechaCita() {
		return this.fechaCita;
	}

	public void setFechaCita(Date fechaCita) {
		this.fechaCita = fechaCita;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return this.estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "referencia")
	public ReferenciaImagenologia getReferenciaImagenologia() {
		return this.referenciaImagenologia;
	}

	public void setReferenciaImagenologia(
			ReferenciaImagenologia referenciaImagenologia) {
		this.referenciaImagenologia = referenciaImagenologia;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "referencia")
	public ReferenciaCirugia getReferenciaCirugia() {
		return this.referenciaCirugia;
	}

	public void setReferenciaCirugia(ReferenciaCirugia referenciaCirugia) {
		this.referenciaCirugia = referenciaCirugia;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "referencia")
	public ReferenciaLaboratorio getReferenciaLaboratorio() {
		return this.referenciaLaboratorio;
	}

	public void setReferenciaLaboratorio(
			ReferenciaLaboratorio referenciaLaboratorio) {
		this.referenciaLaboratorio = referenciaLaboratorio;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "referencia")
	public ReferenciaConsultaEspecializada getReferenciaConsultaEspecializada() {
		return this.referenciaConsultaEspecializada;
	}

	public void setReferenciaConsultaEspecializada(
			ReferenciaConsultaEspecializada referenciaConsultaEspecializada) {
		this.referenciaConsultaEspecializada = referenciaConsultaEspecializada;
	}

}
