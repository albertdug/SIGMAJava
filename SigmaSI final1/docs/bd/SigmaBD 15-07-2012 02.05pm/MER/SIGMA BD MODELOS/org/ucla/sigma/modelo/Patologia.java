package org.ucla.sigma.modelo;

// Generated 15/07/2012 02:32:55 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Patologia generated by hbm2java
 */
@Entity
@Table(name = "patologia", schema = "public")
public class Patologia implements java.io.Serializable {

	private int id;
	private TipoPatologia tipoPatologia;
	private String nombre;
	private char estatus;
	private Set<Historial> historials = new HashSet<Historial>(0);

	public Patologia() {
	}

	public Patologia(int id, TipoPatologia tipoPatologia, String nombre,
			char estatus) {
		this.id = id;
		this.tipoPatologia = tipoPatologia;
		this.nombre = nombre;
		this.estatus = estatus;
	}

	public Patologia(int id, TipoPatologia tipoPatologia, String nombre,
			char estatus, Set<Historial> historials) {
		this.id = id;
		this.tipoPatologia = tipoPatologia;
		this.nombre = nombre;
		this.estatus = estatus;
		this.historials = historials;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tipo_patologiaid", nullable = false)
	public TipoPatologia getTipoPatologia() {
		return this.tipoPatologia;
	}

	public void setTipoPatologia(TipoPatologia tipoPatologia) {
		this.tipoPatologia = tipoPatologia;
	}

	@Column(name = "nombre", nullable = false)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "estatus", nullable = false, length = 1)
	public char getEstatus() {
		return this.estatus;
	}

	public void setEstatus(char estatus) {
		this.estatus = estatus;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "historial_patologia", schema = "public", joinColumns = { @JoinColumn(name = "patologiaid", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "historialid", nullable = false, updatable = false) })
	public Set<Historial> getHistorials() {
		return this.historials;
	}

	public void setHistorials(Set<Historial> historials) {
		this.historials = historials;
	}

}
